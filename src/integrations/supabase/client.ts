// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://cqpuvqxxhzkhqmsykclr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNxcHV2cXh4aHpraHFtc3lrY2xyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI3MzE1NDcsImV4cCI6MjA1ODMwNzU0N30.pQoaenaGEZnQHQPYIiFexTCI6cC03-Lj-A_b9Q4Kw1s";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    global: {
      headers: {
        'Accept': 'application/json, text/*, */*',
        'Content-Type': 'application/json',
        'apikey': SUPABASE_PUBLISHABLE_KEY,
        'X-Client-Info': 'supabase-js/2.0.0',
        'Prefer': 'return=representation'
      },
      fetch: (url, options) => {
        // タイムアウト設定の追加
        const timeoutId = setTimeout(() => {
          console.error("Supabase request timeout");
        }, 10000);
        
        // ヘッダーを確認
        console.log('Supabase request headers:', options?.headers);
        
        return fetch(url, {
          ...options,
          cache: 'no-cache', // キャッシュを使用しない
        }).then(response => {
          clearTimeout(timeoutId);
          if (!response.ok) {
            console.error(`Supabase response error: ${response.status} ${response.statusText}`);
            // レスポンスボディをログに出力して問題を診断
            response.clone().text().then(text => {
              console.error('Error response body:', text);
            }).catch(e => {
              console.error('Failed to log response body:', e);
            });
          }
          return response;
        }).catch(error => {
          clearTimeout(timeoutId);
          console.error("Supabase fetch error:", error);
          throw error;
        });
      }
    },
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
    },
    db: {
      schema: 'public'
    },
    realtime: {
      headers: {
        'Accept': 'application/json, text/*, */*',
        'Content-Type': 'application/json',
        'apikey': SUPABASE_PUBLISHABLE_KEY,
        'Prefer': 'return=representation'
      }
    }
  }
);